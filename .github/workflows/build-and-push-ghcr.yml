name: Build latest-version Dockerfile and push to GHCR

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write    # allow GITHUB_TOKEN to publish to GHCR

jobs:
  detect-build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine latest version folder
        id: get_version
        # finds top-level folders that look like version numbers and picks the highest (sort -V)
        run: |
          set -euo pipefail
          # list top-level directories only, skip .github etc.
          versions=$(find . -maxdepth 1 -type d -printf '%f\n' | sed 's#^\./##' | grep -E '^[0-9]+(\.[0-9]+)*$' || true)
          if [ -z "$versions" ]; then
            echo "No version directories found (pattern: ^[0-9]+(\\.[0-9]+)*$)."
            exit 1
          fi
          latest=$(printf "%s\n" $versions | sort -V | tail -n1)
          echo "Found versions:"
          printf "%s\n" $versions
          echo "Latest version: $latest"
          echo "version=$latest" >> "$GITHUB_OUTPUT"
          echo "context=./${latest}" >> "$GITHUB_OUTPUT"

      - name: Set up QEMU (for multi-platform builds, optional)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Build and push to GHCR (version + latest)
        uses: docker/build-push-action@v4
        with:
          context: ${{ steps.get_version.outputs.context }}
          file: ${{ steps.get_version.outputs.context }}/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/unbound:${{ steps.get_version.outputs.version }}
            ghcr.io/${{ env.OWNER_LC }}/unbound:latest

      - name: Output pushed image names
        run: |
          echo "Pushed ghcr.io/${{ github.repository_owner }}/unbound:${{ steps.get_version.outputs.version }}"
          echo "Pushed ghcr.io/${{ github.repository_owner }}/unbound:latest"
